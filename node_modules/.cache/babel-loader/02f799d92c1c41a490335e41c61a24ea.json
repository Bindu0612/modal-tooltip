{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\modal-tooltip\\\\src\\\\components\\\\HomePageDummy.js\";\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { buttonLabel, COVID19ModalHeaderText, COVID19ModalText, COVID19ModalButtonText } from '../constants';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst HomePageDummy = props => {\n  console.log(props);\n  const [modal, setModal] = useState(false);\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const toolTip = () => {\n    setTooltipOpen(!tooltipOpen);\n  };\n\n  const data = () => {\n    let nonParsedData = {\n      __html: COVID19ModalText\n    };\n\n    let parse = require('html-react-parser');\n\n    let Final = parse('<div>nonParsedData</div>');\n    return Final;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \" \", buttonLabel, \" \"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    className: \"headerClass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \" \", COVID19ModalHeaderText, \" \"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: data(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, COVID19ModalButtonText))));\n};\n\nexport default HomePageDummy;","map":{"version":3,"sources":["C:/Users/user/Desktop/React/modal-tooltip/src/components/HomePageDummy.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","buttonLabel","COVID19ModalHeaderText","COVID19ModalText","COVID19ModalButtonText","ReactHtmlParser","HomePageDummy","props","console","log","modal","setModal","tooltipOpen","setTooltipOpen","toggle","toolTip","data","nonParsedData","__html","parse","require","Final"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;AACA,SAASC,WAAT,EAAsBC,sBAAtB,EAA8CC,gBAA9C,EAAgEC,sBAAhE,QAA8F,cAA9F;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMmB,MAAM,GAAG,MAAM;AACjBH,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACH,GAFD;;AAIA,QAAMK,OAAO,GAAG,MAAM;AAClBF,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACH,GAFD;;AAIA,QAAMI,IAAI,GAAG,MAAM;AACf,QAAIC,aAAa,GAAG;AAAEC,MAAAA,MAAM,EAAEf;AAAV,KAApB;;AACA,QAAIgB,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,QAAIC,KAAK,GAAEF,KAAK,CAAC,0BAAD,CAAhB;AACA,WAAOE,KAAP;AACH,GALD;;AAMA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAEP,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA0Cb,WAA1C,MADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAES,KAAf;AAAsB,IAAA,MAAM,EAAEI,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAA6B,IAAA,SAAS,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuDZ,sBAAvD,MAFJ,eAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,uBAAuB,EAAEc,IAAI,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,eAQI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,sBADL,CARJ,CAFJ,CADJ,CADJ;AAmBH,CAtCD;;AAwCA,eAAeE,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { buttonLabel, COVID19ModalHeaderText, COVID19ModalText, COVID19ModalButtonText } from '../constants';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n \r\nconst HomePageDummy = (props) => {\r\n    console.log(props)\r\n    const [modal, setModal] = useState(false);\r\n    const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n    }\r\n\r\n    const toolTip = () => {\r\n        setTooltipOpen(!tooltipOpen);\r\n    }\r\n\r\n    const data = () => {\r\n        let nonParsedData = { __html: COVID19ModalText };\r\n        let parse = require('html-react-parser');\r\n        let Final= parse('<div>nonParsedData</div>');\r\n        return Final;\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <Button color=\"danger\" onClick={toggle}> {buttonLabel} </Button>\r\n                <Modal isOpen={modal} toggle={toggle} >\r\n\r\n                    <ModalHeader toggle={toggle} className=\"headerClass\"> {COVID19ModalHeaderText} </ModalHeader>\r\n\r\n                    <ModalBody>\r\n                        <div dangerouslySetInnerHTML={data()} />\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        {COVID19ModalButtonText}\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePageDummy;"]},"metadata":{},"sourceType":"module"}